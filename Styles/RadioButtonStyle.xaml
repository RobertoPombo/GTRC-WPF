<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="RadioButtonStyle">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource color1}"/>
        <Setter Property="Foreground" Value="{StaticResource color2}"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color3}"/>
                <Setter Property="Foreground" Value="{StaticResource color1}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" BorderBrush="{StaticResource color3}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" BorderBrush="{StaticResource color3}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="RadioButtonStyle2">

        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="5" BorderThickness="2" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource color2}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource color3}"/>
                            <Setter Property="Foreground" Value="{StaticResource color2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource color3}"/>
                            <Setter Property="Foreground" Value="{StaticResource color1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="RadioButtonStyle3">

        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="1" BorderThickness="2" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource color3}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource color3}"/>
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource color3}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource color3}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource color3}"/>
                            <Setter Property="Foreground" Value="{StaticResource color1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>